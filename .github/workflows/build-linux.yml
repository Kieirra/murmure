name: build-linux
on:
  workflow_call:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - uses: dtolnay/rust-toolchain@stable

      - uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Linux deps (official + extras)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            curl \
            wget \
            libssl-dev \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libayatana-appindicator3-dev \
            librsvg2-dev \
            patchelf \
            libasound2-dev \
            libxdo-dev

      - name: Restore Tauri signing key
        run: echo "${{ secrets.TAURI_PRIVATE_KEY }}" | base64 -d > tauri.key

      - name: Install frontend deps
        run: pnpm install

      - name: Build (AppImage)
        run: pnpm tauri build --bundles appimage

      - name: Sign AppImage(s) with Tauri signer
        env:
          TAURI_PRIVATE_KEY_PATH: tauri.key
          TAURI_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        shell: bash
        run: |
          files=$(find src-tauri/target/release/bundle -type f -name "*.AppImage")
          if [ -n "$files" ]; then
            pnpm tauri signer sign $files
          else
            echo "No AppImage found to sign."
          fi

      - name: Package archive
        run: |
          mkdir -p dist
          cp src-tauri/target/release/bundle/**/*.AppImage dist/ 2>/dev/null || true
          cp src-tauri/target/release/bundle/**/*.sig dist/ 2>/dev/null || true
          zip -r murmure-build-linux.zip dist

      - name: Upload artifact (1 day)
        uses: actions/upload-artifact@v4
        with:
          name: murmure-build-linux
          path: murmure-build-linux.zip
          retention-days: 1
